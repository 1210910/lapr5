:- module(db_controller, [load_db/0]).

:- use_module('../HttpServer/route').
:- use_module('../persistence/DB').
:- use_module('../Repo/repo').

:- use_module(library(http/http_client)).
:- use_module(library(http/thread_httpd)).
:- use_module(library(http/http_json)).
:- use_module(library(http/json)).
:- use_module(library(http/json_convert)).


get_buildings() :-
    routes:buildings_url(URL),
    http_get(URL, Response, []),
    json_to_prolog(Response, PrologData),
    repo:save_buildings(PrologData).


get_floors() :-
    routes:floors_url(URL),
    http_get(URL, Response, []),
    json_to_prolog(Response, PrologData),
    repo:save_floors(PrologData).

get_rooms() :-
    routes:rooms_url(URL),
    http_get(URL, Response, []),
    json_to_prolog(Response, PrologData),
    repo:save_rooms(PrologData).

get_lifts() :-
    routes:lifts_url(URL),
    http_get(URL, Response, []),
    json_to_prolog(Response, PrologData),
    repo:save_lifts(PrologData).

get_passageways() :-
    routes:passageways_url(URL),
    http_get(URL, Response, []),

    json_to_prolog(Response, PrologData),
    repo:save_passageways(PrologData).

get_maps():-
    routes:maps_url(URL),
    http_get(URL,Response,[]),
    writeln(Response),
    json_to_prolog(Response, PrologData),

    repo:save_maps(PrologData).

load_db() :-
    get_floors,
    get_maps,
    get_passageways,
    get_lifts,
    get_buildings.